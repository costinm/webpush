apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gate
  namespace: istio-gw-hostport
spec:
  selector:
    matchLabels:
      app: gate
  template:
    metadata:
      annotations:
        prometheus.io/port: "15090"
        prometheus.io/scrape: "true"
        prometheus.io/path: "/stats/prometheus"
        sidecar.istio.io/inject: "false"
      labels:
        app: gate
    spec:
      containers:
        - name: istio-proxy
          image: costinm/proxyv2:latest
          args:
            - "proxy"
            - "router"
            #            - "--proxyLogLevel"
            #            - "trace"
            - "--serviceCluster"
            - "istio-hostport"
          env:
            # Save the workload secret to file
            - name: OUTPUT_CERTS
              value: /etc/istio/proxy/
            - name: PROXY_CONFIG
              value: |-
                proxy_metadata:
                  a: b
                discoveryAddress: istiod-canary.istio-system.svc:15012
                zipkin:
                  address: ""


            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace

          ports:
            # Creates on each host a port forwarder:
            # -A CNI-DN-78555e74edb8054e88910 -p tcp -m tcp --dport 5000 -j DNAT --to-destination 10.48.0.156:5000
            - containerPort: 5000
              name: docker
              protocol: TCP
              hostPort: 5000
            - containerPort: 5001
              name: docker1
              protocol: TCP
              hostPort: 5001
            - containerPort: 15443
              name: https
              protocol: TCP
              hostPort: 443
            - containerPort: 15080
              name: http
              protocol: TCP
              hostPort: 80
          volumeMounts:
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - name: istio-envoy
              mountPath: /etc/istio/proxy
            - name: istio-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            # Not creating those directories disables Secret watching
            #            - name: ingressgatewaysdsudspath
            #              mountPath: /var/run/ingress_gateway
            - name: podinfo
              mountPath: /etc/istio/pod
      volumes:
        - name: istiod-ca-cert
          configMap:
            name: istio-ca-root-cert
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
        - name: istio-envoy
          emptyDir: {}
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: istio-ca
---
