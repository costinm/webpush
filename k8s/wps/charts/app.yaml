---
apiVersion: v1
kind: Service
metadata:
  name: wps
  namespace: wps
  labels:
    release: wps
spec:
  ports:
    - port: 5222
      name: ssh
    - port: 5228
      name: h2
  selector:
    app: wps

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wps
  namespace: wps
  labels:
    app: wps
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: wps
  template:
    metadata:
      labels:
        app: wps
    spec:
      serviceAccountName: default
      containers:
        - name: app
          #image: localhost:5000/wps:2020-05-24
          #image: localhost:5000/wps:2020-05-24
          image: wps:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: grpc
            - containerPort: 8000
              name: http
            - containerPort: 9000
              name: noise1
#          readinessProbe:
#            httpGet:
#              path: /ready
#              port: 8080
#            initialDelaySeconds: 5
#            periodSeconds: 30
#            timeoutSeconds: 5
          envFrom:
          - configMapRef:
              name: wps
              optional: true
          env:
            - name: GOTRACEBACK
              value: "all"
          resources:
            requests:
              cpu: 800m
              memory: 2048Mi
          volumeMounts:
            - name: wps
              mountPath: /var/lib/wps
              readOnly: true

        # Co-located istio Gateway
        - name: istio-proxy
          image: costinm/proxyv2:latest
          args:
            - "proxy"
            - "router"
            #            - "--proxyLogLevel"
            #            - "trace"
            - "--serviceCluster"
            - "istiod"
          env:
            - name: XDS_SAVE
              value: /etc/istio/proxy/
            - name: XDS_LOCAL
              value: 0.0.0.0:15015
            # Save the workload secret to file
            - name: OUTPUT_CERTS
              value: /etc/istio/proxy/
            # Override default ca addr - use real istiod
            # This will save the certs to a dir, available to local istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: PROXY_CONFIG
              value: |-
                discoveryAddress: istiod.istio-system.svc:15012
                zipkin:
                  address: ""
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace

          ports:
            # Creates on each host a port forwarder:
            # -A CNI-DN-78555e74edb8054e88910 -p tcp -m tcp --dport 5000 -j DNAT --to-destination 10.48.0.156:5000
            - containerPort: 15012
              name: docker
              protocol: TCP
          volumeMounts:
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - name: istio-envoy
              mountPath: /etc/istio/proxy
            - name: istio-token
              mountPath: /var/run/secrets/tokens
              readOnly: true
            # Not creating those directories disables Secret watching
            #            - name: ingressgatewaysdsudspath
            #              mountPath: /var/run/ingress_gateway
            - name: podinfo
              mountPath: /etc/istio/pod

      securityContext:
        runAsUser: 0
        runAsGroup: 5228
      volumes:
        - emptyDir:
            medium: Memory
          name: local-certs

        - name: istiod
          configMap:
            name: istiod
            optional: true
        - name: mesh
          configMap:
            name: istiod-mesh
            optional: true

        - name: istiod-ca-cert
          configMap:
            name: istio-ca-root-cert
        - name: podinfo
          downwardAPI:
            items:
              - path: "labels"
                fieldRef:
                  fieldPath: metadata.labels
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
        - name: istio-envoy
          emptyDir: {}
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  path: istio-token
                  expirationSeconds: 43200
                  audience: istio-ca

        - name: wps
          configMap:
            name: wps
            optional: true
