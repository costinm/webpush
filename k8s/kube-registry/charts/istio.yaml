apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: default
  namespace: kube-registry
spec:
  ingress:
    - port:
        number: 6001
        protocol: HTTP
        name: httplocal
      defaultEndpoint: 127.0.0.1:5000
  egress:
#    - port:
#        number: 5002
#        protocol: HTTP
#        name:  registry
#      bind: 127.0.0.1
#      hosts:
#        - kube-registry/kube-registry.kube-registry
#    - port:
#        number: 5123
#        protocol: HTTP
#        name:  registry
#      bind: 127.0.0.1
#      captureMode: NONE
#      hosts:
#        - kube-registry/kube-registry.kube-registry
    - hosts:
        - "~/*"
---
apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: proxy
  namespace: kube-registry
spec:
  workloadSelector:
    labels:
      app: kube-registry-proxy
  ingress:
    - port:
        number: 5000
        protocol: TCP
        name: httplocal
      defaultEndpoint: 127.0.0.1:5001
  egress:
    - port:
        number: 5001
        protocol: TCP
        name:  registry
      captureMode: NONE
      bind: 127.0.0.1
      hosts:
        # Must use fully qualified name
        - kube-registry/kube-registry2.kube-registry.svc.cluster.local
    - port:
        number: 15014
        protocol: TCP
        name:  http-monitoring
      hosts:
        - istio-system/istiod.istio-system.svc.cluster.local
    #    - port:
    #        number: 5123
    #        protocol: HTTP
    #        name:  registry
    #      bind: 127.0.0.1
    #      captureMode: NONE
    #      hosts:
    #        - kube-registry/kube-registry.kube-registry
    - hosts:
        - "~/*"
---
# Can't do ingress without NONE
#
apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: kaniko
  namespace: kube-registry
spec:
  workloadSelector:
    labels:
      skaffold-kaniko: skaffold-kaniko
  egress:
    - port:
        number: 5000
        protocol: TCP
        name:  registry
      captureMode: NONE
      bind: 127.0.0.1
      hosts:
        - kube-registry/kube-registry.kube-registry.svc.cluster.local
    - hosts:
        - "*/*"

---
apiVersion: networking.istio.io/v1alpha3
kind: Sidecar
metadata:
  name: docker
  namespace: kube-registry
spec:
  workloadSelector:
    labels:
      app: docker
  egress:
    - port:
        number: 5000
        protocol: TCP
        name:  registry
      captureMode: NONE
      bind: 127.0.0.1
      hosts:
        - kube-registry/kube-registry.kube-registry.svc.cluster.local
    - hosts:
        - "~/*"

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: kube-registry
  namespace: kube-registry
spec:
  host: kube-registry.kube-registry.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: kube-registry2
  namespace: kube-registry
spec:
  host: kube-registry2.kube-registry.svc.cluster.local
  trafficPolicy:
    tls:
      mode: DISABLE
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: kr
  namespace: kube-registry
spec:
  gateways:
  - istio-system/ingressgateway
  hosts:
  - istiod.asm.istio.webinf.info
  
